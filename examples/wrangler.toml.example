# Example wrangler.toml for CopilotEdge with Durable Objects
# Copy this file to wrangler.toml and update with your values

name = "copilotedge-worker"
main = "src/index.ts"
compatibility_date = "2025-08-18"
compatibility_flags = ["nodejs_compat"]

# Your Cloudflare account ID (from dashboard)
account_id = "YOUR_ACCOUNT_ID"

# Public environment variables (non-sensitive)
[vars]
# Set environment (production, staging, development)
ENVIRONMENT = "production"
# Enable debug logging (WARNING: only for development)
DEBUG = "false"

# SECURITY: Never put API keys or secrets in wrangler.toml!
# Use wrangler secrets instead:
#
# wrangler secret put CLOUDFLARE_API_TOKEN
# wrangler secret put CLOUDFLARE_ACCOUNT_ID
# wrangler secret put HMAC_SECRET
# wrangler secret put KV_ENCRYPTION_KEY
#
# For local development, create a .dev.vars file:
# CLOUDFLARE_API_TOKEN=your-dev-token
# CLOUDFLARE_ACCOUNT_ID=your-dev-account
# HMAC_SECRET=your-dev-hmac-secret
# KV_ENCRYPTION_KEY=your-dev-encryption-key

# Durable Objects binding for conversation management
[[durable_objects.bindings]]
name = "CONVERSATION_DO"
class_name = "ConversationDO"
script_name = "copilotedge-worker"

# Durable Object for distributed rate limiting
[[durable_objects.bindings]]
name = "RATE_LIMITER_DO"
class_name = "RateLimiterDO"
script_name = "copilotedge-worker"

# Migration for Durable Objects
[[migrations]]
tag = "v2"
new_classes = ["ConversationDO", "RateLimiterDO"]

# Optional: Workers KV for additional caching
[[kv_namespaces]]
binding = "COPILOT_CACHE"
id = "YOUR_KV_NAMESPACE_ID"
# For local development
preview_id = "YOUR_PREVIEW_KV_NAMESPACE_ID"

# Optional: Custom domain
# [[routes]]
# pattern = "chat.example.com/*"
# zone_id = "YOUR_ZONE_ID"

# Optional: Enable logpush for production monitoring
# [logpush]
# enabled = true

# Observability settings
[observability]
enabled = true
head_sampling_rate = 1

# Build configuration
[build]
command = "npm run build"
watch_paths = ["src/**/*.ts"]

# Development settings
[dev]
port = 8787
local_protocol = "http"

# Optional: Tail consumers for log processing
# [[tail_consumers]]
# service = "log-processor"
# environment = "production"

# Optional: Analytics Engine for metrics
# [[analytics_engine_datasets]]
# binding = "METRICS"
# dataset = "copilotedge_metrics"

# Security configuration
[env.production]
# Production-specific settings
[env.production.vars]
ENVIRONMENT = "production"
DEBUG = "false"

[env.staging]
# Staging-specific settings
[env.staging.vars]
ENVIRONMENT = "staging"
DEBUG = "true"

[env.development]
# Development-specific settings
[env.development.vars]
ENVIRONMENT = "development"
DEBUG = "true"